package view.export;

import java.awt.Font;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.BoxLayout;
import model.mobility.Random;
import view.C4RView;
import view.mapelements.VehicleTypePanel;

/**
 *
 * @author Neblis
 */
public class MobilityModelFrame extends javax.swing.JFrame {

    /**
     * Creates new form MobilityModelFrame
     */
    private final static String TITLE = "Mobility model";
    private final static String HEADER = "Select a mobility model: ";
    
    private final static String RANDOM = "Random";
    private final static String RANDOM_TIME = "Time: ";
    private final static String RANDOM_TIME_DFLT = "60";
    private final static String RANDOM_REPETITION = "Repetition rate: ";
    private final static String RANDOM_REPETITION_DFLT = "3";
    
    private final static String KRAUSS = "Krauss";
    
    private final static String EXPORT = "Export";
    private final Font HEADER_FONT;  
    private static Font FONT;  
    
    private final C4RView view;
    private final String simulation;
    
    private HashMap<String, Double> vTypesProbability;
    
    public MobilityModelFrame(C4RView view, String simulation, List<VehicleTypePanel> vTypes) {
        this.view = view;
        this.simulation = simulation;
        FONT = view.getFont();
        vTypesProbability = new HashMap();
        HEADER_FONT = new Font("Century Gothic", Font.BOLD, 16);
        
        initComponents();
        typesPanel.setLayout(new BoxLayout(typesPanel, BoxLayout.Y_AXIS));
        Double probability = 1.0 / vTypes.size();
       
        vTypes.forEach((vehicle) -> {
            vTypesProbability.put(vehicle.getName(), probability);
            typesPanel.add(new TypeElement(vehicle.getName(), this, 
                                vehicle.getIconLabel().getIcon(), probability));
        });
        
        typesPanel.updateUI();
        
        this.setLocationRelativeTo(view);
        this.setAlwaysOnTop(true);
        this.setTitle(TITLE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        modelsTab = new javax.swing.JTabbedPane();
        randomPanel = new javax.swing.JPanel();
        typesScroll = new javax.swing.JScrollPane();
        typesPanel = new javax.swing.JPanel();
        errorLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        timeField = new javax.swing.JFormattedTextField();
        repetitionLabel = new javax.swing.JLabel();
        repetitionField = new javax.swing.JFormattedTextField();
        exportLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(TITLE);

        titleLabel.setFont(HEADER_FONT);
        titleLabel.setForeground(new java.awt.Color(204, 0, 102));
        titleLabel.setText(HEADER);

        javax.swing.GroupLayout headerLabelLayout = new javax.swing.GroupLayout(headerLabel);
        headerLabel.setLayout(headerLabelLayout);
        headerLabelLayout.setHorizontalGroup(
            headerLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        headerLabelLayout.setVerticalGroup(
            headerLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        modelsTab.setFont(C4RView.FONT);

        randomPanel.setBackground(new java.awt.Color(255, 255, 255));
        randomPanel.setFont(C4RView.FONT);

        typesScroll.setBorder(null);

        typesPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout typesPanelLayout = new javax.swing.GroupLayout(typesPanel);
        typesPanel.setLayout(typesPanelLayout);
        typesPanelLayout.setHorizontalGroup(
            typesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );
        typesPanelLayout.setVerticalGroup(
            typesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        typesScroll.setViewportView(typesPanel);

        timeLabel.setFont(FONT);
        timeLabel.setText(RANDOM_TIME);

        timeField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        timeField.setText(RANDOM_TIME_DFLT);
        timeField.setFont(FONT);

        repetitionLabel.setFont(FONT);
        repetitionLabel.setText(RANDOM_REPETITION);

        repetitionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        repetitionField.setText(RANDOM_REPETITION_DFLT);
        repetitionField.setFont(FONT);

        javax.swing.GroupLayout randomPanelLayout = new javax.swing.GroupLayout(randomPanel);
        randomPanel.setLayout(randomPanelLayout);
        randomPanelLayout.setHorizontalGroup(
            randomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(randomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(randomPanelLayout.createSequentialGroup()
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(repetitionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(repetitionField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(errorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(typesScroll, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        randomPanelLayout.setVerticalGroup(
            randomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(typesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(randomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repetitionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(repetitionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        modelsTab.addTab(RANDOM, randomPanel);

        exportLabel.setText(EXPORT);
        exportLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(modelsTab, javax.swing.GroupLayout.PREFERRED_SIZE, 373, Short.MAX_VALUE)
                    .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modelsTab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportLabelMouseClicked
        // TODO add your handling code here:
        view.exportSimulation(new Random(10,10), simulation);
    }//GEN-LAST:event_exportLabelMouseClicked

    public void setProbability(String name, double probability){
        vTypesProbability.put(name, probability);
    }

    public static Font getFONT() {
        return FONT;
    }
    
    public double totalProbability(){
        double total = 0.0;
        
        for(Double probability : vTypesProbability.values()){
            total += probability;
        }
        return total;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel exportLabel;
    private javax.swing.JPanel headerLabel;
    private javax.swing.JTabbedPane modelsTab;
    private javax.swing.JPanel randomPanel;
    private javax.swing.JFormattedTextField repetitionField;
    private javax.swing.JLabel repetitionLabel;
    private javax.swing.JFormattedTextField timeField;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel typesPanel;
    private javax.swing.JScrollPane typesScroll;
    // End of variables declaration//GEN-END:variables
}
