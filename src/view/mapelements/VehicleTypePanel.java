package view.mapelements;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import model.routes.VType;
import model.routes.VType.EmissionType;

import view.MogenView;

/**
 *
 * @author Neblis
 */
public class VehicleTypePanel extends javax.swing.JPanel {

    /**
     * Creates new form vehicleTypeElement
     */
    private static final String MAX_SPEED = "Max speed";
    private static final String ACCEL = "Accel";
    private static final String DECEL = "Decel";
    private static final String TAU = "Tau";
    private static final String LENGHT = "Length";
    private static final String PROBABILITY = "Prob.";
    private static final String EMISSION = "Emission";
    
    private static final String ENABLE_TOOL_TIP = "Enable";
    
    public final static Font NAME_FONT = new Font("Century Gothic", Font.BOLD, 14);
    
    private final static String DELETE_ICON_IMG = "resources/button/delete.png";
    private final static String SETTINGS_ICON_IMG = "resources/button/settings.png";
    private final static String EDIT_FOLLOWING_ICON_IMG = "resources/button/editFollow.png";
    
    private final static int SPEED_SPORT = 50;
    private final static double ACCEL_SPORT = 3;
    private final static double LENGTH_TRUCK = 3;

    ImageIcon DELETE_ICON = new ImageIcon(DELETE_ICON_IMG);
    ImageIcon EDIT_FOLLOWING_ICON = new ImageIcon(EDIT_FOLLOWING_ICON_IMG);
    ImageIcon SETTINGS_ICON = new ImageIcon(SETTINGS_ICON_IMG);
    
    private static DefaultComboBoxModel boxModel;
    
    private final MogenView view;
    private final String name;
    private final VType type;
    
    boolean eventsEnabled;
    
    protected static enum Icon {
        CAR("resources/icon/car.png"), 
        SPORT("resources/icon/sport.png"), 
        TRUCK("resources/icon/truck.png"), 
        HEAVY("resources/icon/heavy.png");
        
        protected final static int SIZE_X = 50;
        protected final static int SIZE_Y = 50;
        
        private final String location; 
        
        private Icon(String location){
            this.location = location;
        }
        
        protected String getLocation(){
            return location;
        }
    }
    
    public VehicleTypePanel(String name, VType type, MogenView view) {
        this.name = name;
        this.view = view;
        this.type = type;
        eventsEnabled = false;
        
        ImageIcon imageIcon;
                
        if (type.getAccel() > ACCEL_SPORT || type.getMaxSpeed() > SPEED_SPORT){
            imageIcon = new ImageIcon(Icon.SPORT.getLocation());
        }else if (type.getLength() >= LENGTH_TRUCK){
            imageIcon = new ImageIcon(Icon.TRUCK.getLocation());
        }else{
            imageIcon = new ImageIcon(Icon.CAR.getLocation());
        }
        VehicleTypePanel.boxModel = new DefaultComboBoxModel<>(EmissionType.values());
        
        initComponents();
        removeLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        editFollowingLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        settingsLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        icon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        update();
        
        icon.setIcon(imageIcon);
        setFont(view.getFont());
        
        System.out.println(buttonsPanel.getWidth());
        variablesPanel.setVisible(false);
        this.setMaximumSize(new Dimension(370, 67));
        
        eventsEnabled = true;
    }
    
    public void update(){
        if(type == null) return;
        accelField.setText(Double.toString(type.getAccel()));
        decelField.setText(Double.toString(type.getDecel()));
        lengthField.setText(Integer.toString(type.getLength()));
        tauField.setText(Double.toString(type.getTau()));
        speedField.setText(Integer.toString(type.getMaxSpeed()));
        probabilityField.setText(Double.toString(type.getProbability()));
        emissionBox.setSelectedItem(type.getEmission());
        
        this.updateUI();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonsPanel = new javax.swing.JPanel();
        icon = new javax.swing.JLabel();
        optionsPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        enabledBox = new javax.swing.JCheckBox();
        removeLabel = new javax.swing.JLabel();
        editFollowingLabel = new javax.swing.JLabel();
        settingsLabel = new javax.swing.JLabel();
        variablesPanel = new javax.swing.JPanel();
        speedLabel = new javax.swing.JLabel();
        speedField = new javax.swing.JFormattedTextField();
        accelLabel = new javax.swing.JLabel();
        accelField = new javax.swing.JFormattedTextField();
        sigmaLabel = new javax.swing.JLabel();
        tauField = new javax.swing.JFormattedTextField();
        decelLabel = new javax.swing.JLabel();
        decelField = new javax.swing.JFormattedTextField();
        lengthLabel = new javax.swing.JLabel();
        lengthField = new javax.swing.JFormattedTextField();
        probabilityLabel = new javax.swing.JLabel();
        probabilityField = new javax.swing.JFormattedTextField();
        emissionLabel = new javax.swing.JLabel();
        emissionBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        setMaximumSize(new java.awt.Dimension(600, 67));

        buttonsPanel.setBackground(new java.awt.Color(255, 255, 255));

        icon.setPreferredSize(new java.awt.Dimension(50, 50));
        icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconMouseClicked(evt);
            }
        });

        optionsPanel.setBackground(new java.awt.Color(255, 255, 255));
        optionsPanel.setMaximumSize(new java.awt.Dimension(32767, 64));

        nameLabel.setFont(NAME_FONT);
        nameLabel.setForeground(new java.awt.Color(14, 153, 79));
        nameLabel.setText(name
        );

        enabledBox.setBackground(new java.awt.Color(255, 255, 255));
        enabledBox.setSelected(true);
        enabledBox.setToolTipText(ENABLE_TOOL_TIP);
        enabledBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enabledBoxActionPerformed(evt);
            }
        });

        removeLabel.setIcon(DELETE_ICON);
        removeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeLabelMouseClicked(evt);
            }
        });

        editFollowingLabel.setIcon(EDIT_FOLLOWING_ICON);
        editFollowingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editFollowingLabelMouseClicked(evt);
            }
        });

        settingsLabel.setIcon(SETTINGS_ICON);
        settingsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(enabledBox))
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(settingsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editFollowingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(removeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(settingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsPanelLayout.createSequentialGroup()
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enabledBox)
                        .addGap(8, 8, 8))
                    .addComponent(editFollowingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        variablesPanel.setBackground(new java.awt.Color(236, 236, 236));

        speedLabel.setFont(view.getFont());
        speedLabel.setText(MAX_SPEED);

        speedField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        speedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        speedField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        speedField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                speedFieldFocusLost(evt);
            }
        });
        speedField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedFieldActionPerformed(evt);
            }
        });

        accelLabel.setFont(view.getFont());
        accelLabel.setText(ACCEL);

        accelField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        accelField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        accelField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        accelField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                accelFieldFocusLost(evt);
            }
        });
        accelField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accelFieldActionPerformed(evt);
            }
        });

        sigmaLabel.setFont(view.getFont());
        sigmaLabel.setText(TAU);

        tauField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        tauField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        tauField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tauField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tauFieldFocusLost(evt);
            }
        });
        tauField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tauFieldActionPerformed(evt);
            }
        });

        decelLabel.setFont(view.getFont());
        decelLabel.setText(DECEL);

        decelField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        decelField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        decelField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        decelField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                decelFieldFocusLost(evt);
            }
        });
        decelField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decelFieldActionPerformed(evt);
            }
        });

        lengthLabel.setFont(view.getFont());
        lengthLabel.setText(LENGHT);

        lengthField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lengthField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        lengthField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lengthField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lengthFieldFocusLost(evt);
            }
        });
        lengthField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthFieldActionPerformed(evt);
            }
        });

        probabilityLabel.setFont(view.getFont());
        probabilityLabel.setText(PROBABILITY);

        probabilityField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        probabilityField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        probabilityField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        probabilityField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                probabilityFieldFocusLost(evt);
            }
        });
        probabilityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                probabilityFieldActionPerformed(evt);
            }
        });

        emissionLabel.setFont(view.getFont());
        emissionLabel.setText(EMISSION);

        emissionBox.setFont(view.getFont());
        emissionBox.setModel(boxModel);
        emissionBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        emissionBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                emissionBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout variablesPanelLayout = new javax.swing.GroupLayout(variablesPanel);
        variablesPanel.setLayout(variablesPanelLayout);
        variablesPanelLayout.setHorizontalGroup(
            variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(variablesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(emissionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(decelLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(speedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(variablesPanelLayout.createSequentialGroup()
                        .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(speedField, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(decelField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accelField, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(lengthField)))
                    .addComponent(emissionBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sigmaLabel)
                    .addComponent(probabilityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tauField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(probabilityField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        variablesPanelLayout.setVerticalGroup(
            variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(variablesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accelLabel)
                    .addComponent(accelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sigmaLabel)
                    .addComponent(tauField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decelLabel)
                    .addComponent(decelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthLabel)
                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(probabilityLabel)
                    .addComponent(probabilityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(variablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emissionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emissionLabel))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(variablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(variablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void probabilityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_probabilityFieldActionPerformed
        probabilityAction();
    }//GEN-LAST:event_probabilityFieldActionPerformed

    private void editFollowingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFollowingLabelMouseClicked
        if(eventsEnabled){
            JFrame edit = new FollowingModelFrame(view, name, type);
            edit.setVisible(true);
        }
    }//GEN-LAST:event_editFollowingLabelMouseClicked

    private void removeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeLabelMouseClicked
        if(eventsEnabled){
            view.deleteVType(this);
        }
    }//GEN-LAST:event_removeLabelMouseClicked

    private void enabledBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enabledBoxActionPerformed
        if(eventsEnabled){
            type.setEnabled(enabledBox.isSelected());
            view.editVType(name, type);
        }
        
    }//GEN-LAST:event_enabledBoxActionPerformed

    private void lengthFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthFieldActionPerformed
        lengthAction();
    }//GEN-LAST:event_lengthFieldActionPerformed

    private void speedFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedFieldActionPerformed
        speedAction();
    }//GEN-LAST:event_speedFieldActionPerformed

    private void decelFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decelFieldActionPerformed
        decelAction();
    }//GEN-LAST:event_decelFieldActionPerformed
    
    private void retractPanel(){
        if(eventsEnabled){
            if(variablesPanel.isVisible()){
                variablesPanel.setVisible(false);
                this.setMaximumSize(new Dimension(this.getWidth(), 67));
            }else{
                variablesPanel.setVisible(true);
                this.setMaximumSize(new Dimension(this.getWidth(), 200));
            }
        }
    }
    
    private void accelFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accelFieldActionPerformed
        this.accelAction();
    }//GEN-LAST:event_accelFieldActionPerformed

    private void tauFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tauFieldActionPerformed
        tauAction();
    }//GEN-LAST:event_tauFieldActionPerformed

    private void iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconMouseClicked
        // TODO add your handling code here:
        view.selectIcon(this);
    }//GEN-LAST:event_iconMouseClicked

    private void settingsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsLabelMouseClicked
        // TODO add your handling code here:
        this.retractPanel();
    }//GEN-LAST:event_settingsLabelMouseClicked

    private void speedFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_speedFieldFocusLost
        speedAction();
    }//GEN-LAST:event_speedFieldFocusLost

    private void decelFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_decelFieldFocusLost
        decelAction();
    }//GEN-LAST:event_decelFieldFocusLost

    private void accelFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accelFieldFocusLost
        accelAction();
    }//GEN-LAST:event_accelFieldFocusLost

    private void lengthFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lengthFieldFocusLost
        lengthAction();
    }//GEN-LAST:event_lengthFieldFocusLost

    private void tauFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tauFieldFocusLost
        tauAction();
    }//GEN-LAST:event_tauFieldFocusLost

    private void probabilityFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_probabilityFieldFocusLost
        probabilityAction();
    }//GEN-LAST:event_probabilityFieldFocusLost

    private void emissionBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_emissionBoxItemStateChanged
        
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED && eventsEnabled) {
            System.out.print(emissionBox.getSelectedItem().toString() + "\n");
            type.setEmission((EmissionType)emissionBox.getSelectedItem());
            view.editVType(name, type);
        }
    }//GEN-LAST:event_emissionBoxItemStateChanged

    private void speedAction(){
        if(eventsEnabled){
            type.setMaxSpeed(Integer.parseInt(speedField.getText()));
            view.editVType(name, type);
        }
    }
    
    
    private void accelAction(){
        if(eventsEnabled){
            accelField.setText(accelField.getText().replace(',', '.'));
            type.setAccel(Double.valueOf(accelField.getText()));
            view.editVType(name, type);
        }
    }
    
    
    private void decelAction(){
        if(eventsEnabled){
            decelField.setText(decelField.getText().replace(',', '.'));
            type.setDecel(Double.valueOf(decelField.getText()));
            view.editVType(name, type);
        }
    }
    
    private void lengthAction(){
        if(eventsEnabled){
            type.setLength(Integer.parseInt(lengthField.getText()));
            view.editVType(name, type);
        }
    }
    
    private void tauAction(){
        if(eventsEnabled){
            tauField.setText(tauField.getText().replace(',', '.'));
            type.setTau(Double.valueOf(tauField.getText()));
            view.editVType(name, type);
        }
    }
    
    private void probabilityAction(){
        if(eventsEnabled){
            probabilityField.setText(probabilityField.getText().replace(',', '.'));
            type.setProbability(Double.valueOf(probabilityField.getText()));
            view.editVType(name, type);
        }
    }
    
    public JLabel getIconLabel() {
        return icon;
    }

    @Override
    public String toString() {
        return  name;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    public void changeIcon(Icon iconImage) {
        if(eventsEnabled){
            ImageIcon imageIcon = new ImageIcon(iconImage.getLocation());
            icon.setIcon(imageIcon);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField accelField;
    private javax.swing.JLabel accelLabel;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JFormattedTextField decelField;
    private javax.swing.JLabel decelLabel;
    private javax.swing.JLabel editFollowingLabel;
    private javax.swing.JComboBox<String> emissionBox;
    private javax.swing.JLabel emissionLabel;
    private javax.swing.JCheckBox enabledBox;
    private javax.swing.JLabel icon;
    private javax.swing.JFormattedTextField lengthField;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JFormattedTextField probabilityField;
    private javax.swing.JLabel probabilityLabel;
    private javax.swing.JLabel removeLabel;
    private javax.swing.JLabel settingsLabel;
    private javax.swing.JLabel sigmaLabel;
    private javax.swing.JFormattedTextField speedField;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JFormattedTextField tauField;
    private javax.swing.JPanel variablesPanel;
    // End of variables declaration//GEN-END:variables
}
